syntax = "proto3";
package iroha.protocol;
import "schema/primitive.proto";
import "schema/transaction.proto";

message GetAccount {
  string account_id = 1;
}

message GetSignatories {
  string account_id = 1;
}

message Pager {
    bytes tx_hash = 1;
    uint32 limit = 2;
}

message GetAccountTransactions {
  string account_id = 1;
  Pager pager = 2;
}

message GetAccountAssetTransactions {
  string account_id = 1;
  string asset_id = 2;
  Pager pager = 3;
}

message GetAccountAssets {
  string account_id = 1;
  string asset_id = 2;
}

message GetTransactions {
    repeated bytes tx_hashes = 1;
}

message Query {
  message Payload {
    uint64 created_time = 1;
    string creator_account_id = 2;
      oneof query {
        GetAccount get_account = 3;
        GetSignatories get_signatories = 4;
        GetAccountTransactions get_account_transactions = 5;
        GetAccountAssetTransactions get_account_asset_transactions = 6;
        GetAccountAssets get_account_assets = 7;
        GetTransactions get_transactions = 8;
      }
      // used to prevent replay attacks.
      uint64 query_counter = 20;
  }

  Payload payload = 1;
  Signature signature = 2;
}



// *** WSV data structure *** //
message Asset {
    string asset_id = 1;
    string domain_id = 2;
    uint32 precision = 3;
}

message Account {
    string account_id = 1;
    string domain_name = 2;
    uint32 quorum = 4;
    bytes master_key = 5;
}

message AccountAsset {
    string asset_id = 1;
    string account_id = 2;
    uint64 balance = 3;
}

// *** Responses *** //
message AccountAssetResponse {
    AccountAsset account_asset = 1;
}

message AccountResponse {
    Account account = 1;
}

message ErrorResponse {
    enum Reason  {
        STATELESS_INVALID = 0;
        STATEFUL_INVALID = 1;
        NO_ACCOUNT = 2; // when requested account does not exist
        NO_ACCOUNT_ASSETS = 3; // when requested account asset does not exist
        NO_SIGNATORIES = 4; // when requested signatories does not exist
        NOT_SUPPORTED = 5; // when unidentified request was received
        WRONG_FORMAT = 6; // when json format wrong
        NO_ASSET = 7;
    }
    Reason reason = 1;
}

message SignatoriesResponse {
    repeated bytes keys = 1;
}

message TransactionsResponse {
    repeated Transaction transactions = 1;
}

message QueryResponse {
    message Payload {
        oneof response {
            AccountAssetResponse account_assets_response = 1;
            AccountResponse account_response = 2;
            ErrorResponse error_response = 3;
            SignatoriesResponse signatories_response = 4;
            TransactionsResponse transactions_response = 5;
        }
    }
    Payload payload = 1;
    Signature signature = 2;
}